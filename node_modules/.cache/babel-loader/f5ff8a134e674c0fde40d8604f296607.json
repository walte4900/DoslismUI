{"remainingRequest":"F:\\doslism-ui\\doslism-ui\\node_modules\\babel-loader\\lib\\index.js!F:\\doslism-ui\\doslism-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\doslism-ui\\doslism-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\doslism-ui\\doslism-ui\\src\\views\\Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\doslism-ui\\doslism-ui\\src\\views\\Game.vue","mtime":1610627862723},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Game.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"game\">\n    <h3 id='score'>当前得分: 0</h3>\n    <select id='difficulty-selector'>\n        <option value=\"1\">新手</option>\n        <option value=\"3\">学徒</option>\n        <option value=\"5\">专家</option>\n        <option value=\"7\">大师</option>\n        <option value=\"10\">传奇</option>\n    </select>\n    <button id='start-btn'>开始</button>\n    <div class=\"container\">\n        <div class='grid'>\n        </div>\n        <div class=\"mini-grid\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n  </div>\n</template>\n<script>\n// 严格模式\n\"use strict\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const map = document.querySelectorAll('.grid')[0];\n    const scoreDisplay = document.querySelectorAll('#score')[0];\n    const startBtn = document.querySelectorAll('#start-btn')[0];\n    const difficulty = document.querySelectorAll('#difficulty-selector')[0];\n    const preview = document.querySelector(\".mini-grid\");\n    let width = 18;\n    let height = 28;\n    let squares = Array.from(document.querySelectorAll('.grid div'));\n    let over = true;\n    let timerId = null;\n    let score = 0;\n\n    let speed = 1;\n\n    // 定义下落方块的形状\n    const L = [\n        [1, width + 1, width * 2 + 1, 2],\n        [width, width + 1, width + 2, width * 2 + 2],\n        [1, width + 1, width * 2 + 1, width * 2],\n        [width, width * 2, width * 2 + 1, width * 2 + 2]\n    ];\n\n    const Z = [\n        [0, width, width + 1, width * 2 + 1],\n        [width + 1, width + 2, width * 2, width * 2 + 1],\n        [0, width, width + 1, width * 2 + 1],\n        [width + 1, width + 2, width * 2, width * 2 + 1]\n    ];\n\n    const T = [\n        [1, width, width + 1, width + 2],\n        [1, width + 1, width + 2, width * 2 + 1],\n        [width, width + 1, width + 2, width * 2 + 1],\n        [1, width, width + 1, width * 2 + 1]\n    ];\n\n    const O = [\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1]\n    ];\n\n    const I = [\n        [1, width + 1, width * 2 + 1, width * 3 + 1],\n        [width, width + 1, width + 2, width + 3],\n        [1, width + 1, width * 2 + 1, width * 3 + 1],\n        [width, width + 1, width + 2, width + 3]\n    ];\n    // 所有的下落方块集合\n    let drops = [L, Z, T, O, I];\n    const dropLength = drops.length;\n\n    let currentPosition = 4;\n    let currentRotation = 0;\n\n    let random = 0;\n    let current = drops[0][0];\n    const displaySquares = document.querySelectorAll('.mini-grid div');\n    const displayWidth = 4;\n    let displayIndex = 0;\n    let nextRandom = Math.floor(Math.random() * width);\n\n    const upComing = [\n        [1, displayWidth + 1, displayWidth * 2 + 1, 2],\n        [0, displayWidth, displayWidth + 1, displayWidth * 2 + 1],\n        [1, displayWidth, displayWidth + 1, displayWidth + 2],\n        [0, 1, displayWidth, displayWidth + 1],\n        [1, displayWidth + 1, displayWidth * 2 + 1, displayWidth * 3 + 1]\n    ];\n\n\n\n\n    /**\n     * 生成由多个单元格组合成的矩形地图\n     * @param {number} w: 地图宽度\n     * @param {number} h 地图高度\n     * @param {number} edge 单元格边长\n     */\n    function generateMap(w, h, edge) {\n        const block = `<div style=\"\"></div>`;\n        const sum = w * h;\n        const ground = 2 * w;\n        map.style = `display: flex;\n                     flex-wrap: wrap;\n                     width: ${w * edge}px; height: ${h * edge}px;\n                    `;\n        for (let i = 0; i < sum; i++) {\n            let block = document.createElement('div');\n            block.setAttribute('style', `height:${edge}px;width:${edge}px;`);\n            if (i % width == width - 1 || i % width == 0) { block.classList.add('wall'); }\n            squares.push(block);\n            map.appendChild(block);\n        };\n        for (let i = 0; i < ground; i++) {\n            let floor = document.createElement('div');\n            floor.setAttribute('style', `height:${edge}px;width:${edge}px;`);\n            floor.classList.add('taken');\n            squares.push(floor);\n            map.appendChild(floor);\n\n        }\n\n    }\n\n    /**\n     * 绘制下落块\n     */\n    function draw() {\n        current.forEach(index => {\n            squares[currentPosition + index].classList.add('drop');\n        });\n    }\n\n    /**\n     * 擦除下落块\n    */\n    function undraw() {\n        current.forEach(index => {\n            squares[currentPosition + index].classList.remove('drop');\n        });\n    }\n\n    /**\n     * 移动碰到其它方块时，会停止移动，开始新的方块\n     */\n    function freeze() {\n        if (current.some(index => squares[currentPosition + index + width].classList.contains('taken'))) {\n            current.forEach(index => squares[currentPosition + index].classList.add('taken'));\n            clearLine();\n            // 随机生成新的方块\n            random = nextRandom;\n            nextRandom = Math.floor(Math.random() * dropLength);\n            current = drops[random][currentRotation];\n            // 从中间位置出现\n            currentPosition = 4;\n            draw();\n            displayShape();\n            gameOver();\n        }\n    }\n\n    /**\n     * 移动下落块\n     */\n    function moveDown() {\n        undraw();\n        currentPosition += width;\n        draw();\n        freeze();\n    }\n\n\n    // 设置方块运动\n    function moveLeft() {\n        undraw();\n        const isAtLeftEdge = current.some(index => (currentPosition + index) % width == 1);\n        if (!isAtLeftEdge) currentPosition -= 1;\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            currentPosition += 1;\n        }\n        draw();\n    }\n\n    function moveRight() {\n        undraw();\n        const isAtRightEdge = current.some(index => (currentPosition + index) % width == (width - 2));\n        if (!isAtRightEdge) currentPosition += 1;\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            currentPosition -= 1;\n        }\n        draw();\n    }\n\n    function rotate() {\n        undraw();\n        let newRotation;\n        if (currentRotation + 1 === current.length) {\n            newRotation = 0;\n        } else {\n            newRotation = currentRotation + 1;\n        }\n        let newCurr = drops[random][newRotation];\n        if (newCurr.some(index => (currentPosition + index) % width == 0) ||\n            newCurr.some(index => (currentPosition + index) % width == width - 1)) {\n        } else {\n            currentRotation = newRotation;\n            current = drops[random][currentRotation];\n        }\n\n        draw();\n    }\n\n\n\n    function displayShape() {\n        displaySquares.forEach(square => {\n            square.classList.remove('drop');\n        });\n        upComing[nextRandom].forEach(index => {\n            displaySquares[displayIndex + index].classList.add('drop');\n        });\n    }\n\n\n\n\n    /** 消除方块 */\n    function clearLine() {\n        for (let i = 0; i < width * height - 1; i++) {\n            let line = [];\n            if (i % width === 0) {\n                let success = true;\n                line = [];\n                for (let j = 1; j < width - 1; j++) {\n                    let index = i + j;\n                    line.push(index);\n                }\n                line.forEach(index => {\n                    if (!squares[index].classList.contains('taken')) {\n                        success = false;\n                    }\n                });\n                if (success) {\n                    line.forEach(index => {\n                        squares[index].classList.remove('taken');\n                        squares[index].classList.remove('drop');\n                    });\n                    const squaresremoved = squares.splice(i, width);\n                    squares = squaresremoved.concat(squares);\n                    squares.forEach(cell => {\n                        map.appendChild(cell);\n                    });\n                    score += 10;\n                    scoreDisplay.innerHTML = '当前得分: ' + score;\n                }\n            }\n        }\n    }\n\n    // 设置键盘事件\n    function control(e) {\n        if (!over) {\n            if (e.keyCode === 37 || e.keyCode === 65) moveLeft();\n            if (e.keyCode === 38 || e.keyCode === 87) rotate();\n            if (e.keyCode === 39 || e.keyCode === 68) moveRight();\n            if (e.keyCode === 40 || e.keyCode === 83) moveDown();\n        }\n    }\n\n    /**\n     * 函数节流，使操作频率可调\n     * @param {Function} fn 需要进行节流的函数\n     * @param {number} wait 最短操作间隔\n     */\n    function throttle(fn, wait = 100) {\n        let lastTime, timeId;\n        // 参数指向这个函数本身\n        console.log(arguments);\n        return function () {\n            // 指向调用回调函数的对象，否则fn的this会指向window\n            let context = this;\n            let currentTime = +new Date;\n            // 参数指向调用者的参数event\n            let args = arguments;\n            if (lastTime && currentTime < lastTime + wait) {\n                clearTimeout(timeId)\n                // 定时器内定义的函数，其中this指向window\n                timeId = setTimeout(function () {\n                    lastTime = currentTime\n                    // 改变this指向，赋值调用者参数给函数\n                    fn.apply(context, args)\n                }, wait);\n            } else {\n                lastTime = currentTime\n                fn.apply(context, args)\n            }\n        }\n    }\n    /**\n     * 游戏结束 GameOver\n     */\n    function gameOver() {\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            clearInterval(timerId);\n            timerId = null;\n            map.innerHTML = '';\n            scoreDisplay.innerHTML = '太菜了吧！';\n            squares = [];\n            score = 0;\n            generateMap(width, height, 22);\n            over = true;\n            startBtn.innerText = \"开始\";\n        }\n    }\n\n\n\n    // 开始，暂停按钮\n    startBtn.addEventListener('click', () => {\n        over = false;\n        speed = Number(difficulty.value);\n        preview.style.setProperty('display', 'flex');\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n            document.removeEventListener('keydown', throttle(control, 50));\n            startBtn.innerText = \"开始\";\n        } else {\n            if (map.children.length == 0) generateMap(width, height, 22);\n            document.addEventListener('keydown', throttle(control, 50));\n            draw();\n            timerId = setInterval(moveDown, 1000 / speed);\n            nextRandom = Math.floor(Math.random() * dropLength);\n            displayShape();\n            startBtn.innerText = \"暂停\";\n        }\n    });\n\n});\nexport default {\n}\n</script>\n<style lang=\"scss\" scoped>\n  #game{\n    margin: 0 auto;\n    width: 100px;\n}\n.container{\n    display: flex;\n    min-width: 500px;\n}\n\n.grid{\n    background: yellow;\n\n}\n\n.grid div{\n    margin: 0 auto;\n}\n\n\n.grid .wall{\n    background-color: black;\n}\n\n.grid .drop{\n    background: rgb(0, 0, 37);\n}\n\n.mini-grid .drop{\n    background: rgb(237, 237, 240);\n}\n\n.grid .taken{\n    background: rgb(8, 68, 58);\n}\n\n\n.mini-grid{\n    width: 80px;\n    height: 80px;\n    display: flex;\n    flex-wrap: wrap;\n    background: rgb(163, 157, 145);\n    display: none;\n}\n\n.mini-grid div{\n    height: 22px;\n    width: 22px;\n}\n\n</style>"],"sourceRoot":"src/views"}]}