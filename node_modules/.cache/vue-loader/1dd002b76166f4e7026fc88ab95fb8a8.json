{"remainingRequest":"F:\\doslism-ui\\doslism-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\doslism-ui\\doslism-ui\\src\\views\\Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\doslism-ui\\doslism-ui\\src\\views\\Game.vue","mtime":1610627862723},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\doslism-ui\\doslism-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Game.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Game.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"game\">\n    <h3 id='score'>当前得分: 0</h3>\n    <select id='difficulty-selector'>\n        <option value=\"1\">新手</option>\n        <option value=\"3\">学徒</option>\n        <option value=\"5\">专家</option>\n        <option value=\"7\">大师</option>\n        <option value=\"10\">传奇</option>\n    </select>\n    <button id='start-btn'>开始</button>\n    <div class=\"container\">\n        <div class='grid'>\n        </div>\n        <div class=\"mini-grid\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n  </div>\n</template>\n<script>\n// 严格模式\n\"use strict\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const map = document.querySelectorAll('.grid')[0];\n    const scoreDisplay = document.querySelectorAll('#score')[0];\n    const startBtn = document.querySelectorAll('#start-btn')[0];\n    const difficulty = document.querySelectorAll('#difficulty-selector')[0];\n    const preview = document.querySelector(\".mini-grid\");\n    let width = 18;\n    let height = 28;\n    let squares = Array.from(document.querySelectorAll('.grid div'));\n    let over = true;\n    let timerId = null;\n    let score = 0;\n\n    let speed = 1;\n\n    // 定义下落方块的形状\n    const L = [\n        [1, width + 1, width * 2 + 1, 2],\n        [width, width + 1, width + 2, width * 2 + 2],\n        [1, width + 1, width * 2 + 1, width * 2],\n        [width, width * 2, width * 2 + 1, width * 2 + 2]\n    ];\n\n    const Z = [\n        [0, width, width + 1, width * 2 + 1],\n        [width + 1, width + 2, width * 2, width * 2 + 1],\n        [0, width, width + 1, width * 2 + 1],\n        [width + 1, width + 2, width * 2, width * 2 + 1]\n    ];\n\n    const T = [\n        [1, width, width + 1, width + 2],\n        [1, width + 1, width + 2, width * 2 + 1],\n        [width, width + 1, width + 2, width * 2 + 1],\n        [1, width, width + 1, width * 2 + 1]\n    ];\n\n    const O = [\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1],\n        [0, 1, width, width + 1]\n    ];\n\n    const I = [\n        [1, width + 1, width * 2 + 1, width * 3 + 1],\n        [width, width + 1, width + 2, width + 3],\n        [1, width + 1, width * 2 + 1, width * 3 + 1],\n        [width, width + 1, width + 2, width + 3]\n    ];\n    // 所有的下落方块集合\n    let drops = [L, Z, T, O, I];\n    const dropLength = drops.length;\n\n    let currentPosition = 4;\n    let currentRotation = 0;\n\n    let random = 0;\n    let current = drops[0][0];\n    const displaySquares = document.querySelectorAll('.mini-grid div');\n    const displayWidth = 4;\n    let displayIndex = 0;\n    let nextRandom = Math.floor(Math.random() * width);\n\n    const upComing = [\n        [1, displayWidth + 1, displayWidth * 2 + 1, 2],\n        [0, displayWidth, displayWidth + 1, displayWidth * 2 + 1],\n        [1, displayWidth, displayWidth + 1, displayWidth + 2],\n        [0, 1, displayWidth, displayWidth + 1],\n        [1, displayWidth + 1, displayWidth * 2 + 1, displayWidth * 3 + 1]\n    ];\n\n\n\n\n    /**\n     * 生成由多个单元格组合成的矩形地图\n     * @param {number} w: 地图宽度\n     * @param {number} h 地图高度\n     * @param {number} edge 单元格边长\n     */\n    function generateMap(w, h, edge) {\n        const block = `<div style=\"\"></div>`;\n        const sum = w * h;\n        const ground = 2 * w;\n        map.style = `display: flex;\n                     flex-wrap: wrap;\n                     width: ${w * edge}px; height: ${h * edge}px;\n                    `;\n        for (let i = 0; i < sum; i++) {\n            let block = document.createElement('div');\n            block.setAttribute('style', `height:${edge}px;width:${edge}px;`);\n            if (i % width == width - 1 || i % width == 0) { block.classList.add('wall'); }\n            squares.push(block);\n            map.appendChild(block);\n        };\n        for (let i = 0; i < ground; i++) {\n            let floor = document.createElement('div');\n            floor.setAttribute('style', `height:${edge}px;width:${edge}px;`);\n            floor.classList.add('taken');\n            squares.push(floor);\n            map.appendChild(floor);\n\n        }\n\n    }\n\n    /**\n     * 绘制下落块\n     */\n    function draw() {\n        current.forEach(index => {\n            squares[currentPosition + index].classList.add('drop');\n        });\n    }\n\n    /**\n     * 擦除下落块\n    */\n    function undraw() {\n        current.forEach(index => {\n            squares[currentPosition + index].classList.remove('drop');\n        });\n    }\n\n    /**\n     * 移动碰到其它方块时，会停止移动，开始新的方块\n     */\n    function freeze() {\n        if (current.some(index => squares[currentPosition + index + width].classList.contains('taken'))) {\n            current.forEach(index => squares[currentPosition + index].classList.add('taken'));\n            clearLine();\n            // 随机生成新的方块\n            random = nextRandom;\n            nextRandom = Math.floor(Math.random() * dropLength);\n            current = drops[random][currentRotation];\n            // 从中间位置出现\n            currentPosition = 4;\n            draw();\n            displayShape();\n            gameOver();\n        }\n    }\n\n    /**\n     * 移动下落块\n     */\n    function moveDown() {\n        undraw();\n        currentPosition += width;\n        draw();\n        freeze();\n    }\n\n\n    // 设置方块运动\n    function moveLeft() {\n        undraw();\n        const isAtLeftEdge = current.some(index => (currentPosition + index) % width == 1);\n        if (!isAtLeftEdge) currentPosition -= 1;\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            currentPosition += 1;\n        }\n        draw();\n    }\n\n    function moveRight() {\n        undraw();\n        const isAtRightEdge = current.some(index => (currentPosition + index) % width == (width - 2));\n        if (!isAtRightEdge) currentPosition += 1;\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            currentPosition -= 1;\n        }\n        draw();\n    }\n\n    function rotate() {\n        undraw();\n        let newRotation;\n        if (currentRotation + 1 === current.length) {\n            newRotation = 0;\n        } else {\n            newRotation = currentRotation + 1;\n        }\n        let newCurr = drops[random][newRotation];\n        if (newCurr.some(index => (currentPosition + index) % width == 0) ||\n            newCurr.some(index => (currentPosition + index) % width == width - 1)) {\n        } else {\n            currentRotation = newRotation;\n            current = drops[random][currentRotation];\n        }\n\n        draw();\n    }\n\n\n\n    function displayShape() {\n        displaySquares.forEach(square => {\n            square.classList.remove('drop');\n        });\n        upComing[nextRandom].forEach(index => {\n            displaySquares[displayIndex + index].classList.add('drop');\n        });\n    }\n\n\n\n\n    /** 消除方块 */\n    function clearLine() {\n        for (let i = 0; i < width * height - 1; i++) {\n            let line = [];\n            if (i % width === 0) {\n                let success = true;\n                line = [];\n                for (let j = 1; j < width - 1; j++) {\n                    let index = i + j;\n                    line.push(index);\n                }\n                line.forEach(index => {\n                    if (!squares[index].classList.contains('taken')) {\n                        success = false;\n                    }\n                });\n                if (success) {\n                    line.forEach(index => {\n                        squares[index].classList.remove('taken');\n                        squares[index].classList.remove('drop');\n                    });\n                    const squaresremoved = squares.splice(i, width);\n                    squares = squaresremoved.concat(squares);\n                    squares.forEach(cell => {\n                        map.appendChild(cell);\n                    });\n                    score += 10;\n                    scoreDisplay.innerHTML = '当前得分: ' + score;\n                }\n            }\n        }\n    }\n\n    // 设置键盘事件\n    function control(e) {\n        if (!over) {\n            if (e.keyCode === 37 || e.keyCode === 65) moveLeft();\n            if (e.keyCode === 38 || e.keyCode === 87) rotate();\n            if (e.keyCode === 39 || e.keyCode === 68) moveRight();\n            if (e.keyCode === 40 || e.keyCode === 83) moveDown();\n        }\n    }\n\n    /**\n     * 函数节流，使操作频率可调\n     * @param {Function} fn 需要进行节流的函数\n     * @param {number} wait 最短操作间隔\n     */\n    function throttle(fn, wait = 100) {\n        let lastTime, timeId;\n        // 参数指向这个函数本身\n        console.log(arguments);\n        return function () {\n            // 指向调用回调函数的对象，否则fn的this会指向window\n            let context = this;\n            let currentTime = +new Date;\n            // 参数指向调用者的参数event\n            let args = arguments;\n            if (lastTime && currentTime < lastTime + wait) {\n                clearTimeout(timeId)\n                // 定时器内定义的函数，其中this指向window\n                timeId = setTimeout(function () {\n                    lastTime = currentTime\n                    // 改变this指向，赋值调用者参数给函数\n                    fn.apply(context, args)\n                }, wait);\n            } else {\n                lastTime = currentTime\n                fn.apply(context, args)\n            }\n        }\n    }\n    /**\n     * 游戏结束 GameOver\n     */\n    function gameOver() {\n        if (current.some(index => squares[currentPosition + index].classList.contains('taken'))) {\n            clearInterval(timerId);\n            timerId = null;\n            map.innerHTML = '';\n            scoreDisplay.innerHTML = '太菜了吧！';\n            squares = [];\n            score = 0;\n            generateMap(width, height, 22);\n            over = true;\n            startBtn.innerText = \"开始\";\n        }\n    }\n\n\n\n    // 开始，暂停按钮\n    startBtn.addEventListener('click', () => {\n        over = false;\n        speed = Number(difficulty.value);\n        preview.style.setProperty('display', 'flex');\n        if (timerId) {\n            clearInterval(timerId);\n            timerId = null;\n            document.removeEventListener('keydown', throttle(control, 50));\n            startBtn.innerText = \"开始\";\n        } else {\n            if (map.children.length == 0) generateMap(width, height, 22);\n            document.addEventListener('keydown', throttle(control, 50));\n            draw();\n            timerId = setInterval(moveDown, 1000 / speed);\n            nextRandom = Math.floor(Math.random() * dropLength);\n            displayShape();\n            startBtn.innerText = \"暂停\";\n        }\n    });\n\n});\nexport default {\n}\n</script>\n<style lang=\"scss\" scoped>\n  #game{\n    margin: 0 auto;\n    width: 100px;\n}\n.container{\n    display: flex;\n    min-width: 500px;\n}\n\n.grid{\n    background: yellow;\n\n}\n\n.grid div{\n    margin: 0 auto;\n}\n\n\n.grid .wall{\n    background-color: black;\n}\n\n.grid .drop{\n    background: rgb(0, 0, 37);\n}\n\n.mini-grid .drop{\n    background: rgb(237, 237, 240);\n}\n\n.grid .taken{\n    background: rgb(8, 68, 58);\n}\n\n\n.mini-grid{\n    width: 80px;\n    height: 80px;\n    display: flex;\n    flex-wrap: wrap;\n    background: rgb(163, 157, 145);\n    display: none;\n}\n\n.mini-grid div{\n    height: 22px;\n    width: 22px;\n}\n\n</style>"]}]}